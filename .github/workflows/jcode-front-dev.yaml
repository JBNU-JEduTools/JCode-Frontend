name: jcode-front-dev

on:
  push:
    branches:
      - develop  # 개발 브랜치

jobs:
  build-push:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    env:
      HARBOR_REGISTRY: harbor.jbnu.ac.kr
      HARBOR_PROJECT: jsh2256
      IMAGE_NAME: jcode-front-dev
    
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4
      
      - name: Harbor 로그인
        uses: docker/login-action@v3
        with:
          registry: ${{ env.HARBOR_REGISTRY }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      
      - name: 버전 설정
        run: echo "VERSION=latest" >> $GITHUB_ENV
      
      - name: .env.dev 파일 생성
        run: |
          cat > .env.dev << EOL
          REACT_APP_API_URL=${{ secrets.DEV_API_URL }}
          REACT_APP_KEYCLOAK_URL=${{ secrets.DEV_KEYCLOAK_URL }}
          REACT_APP_CLIENT_ID=${{ secrets.DEV_CLIENT_ID }}
          REACT_APP_SCOPE=${{ secrets.DEV_SCOPE }}
          REACT_APP_REDIRECT_URI=${{ secrets.DEV_REDIRECT_URI }}
          REACT_APP_REALM=${{ secrets.DEV_REALM }}
          EOL
      
      - name: Docker 이미지 빌드 및 푸시 (개발 환경)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.dev
          build-args: |
            API_URL=${{ secrets.DEV_API_URL }}
            KEYCLOAK_URL=${{ secrets.DEV_KEYCLOAK_URL }}
            CLIENT_ID=${{ secrets.DEV_CLIENT_ID }}
            SCOPE=${{ secrets.DEV_SCOPE }}
            REDIRECT_URI=${{ secrets.DEV_REDIRECT_URI }}
            REALM=${{ secrets.DEV_REALM }}
          push: true
          tags: ${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} 